h1 Content Settings
= form_for @changeset, ~p"/settings", [method: "put"], fn f ->
  = if @changeset.action do
    .alert.alert-danger
      p Oops, something went wrong! Please check the errors below.

  #js-setting-table.block
    .block__header.block__header--js-tabbed
      = if @conn.assigns.current_user do
        = link "Watch List", to: "#", class: "selected", data: [click_tab: "watched"]
        = link "Display", to: "#", data: [click_tab: "display"]
        = link "Comments", to: "#", data: [click_tab: "comments"]
        = link "Notifications", to: "#", data: [click_tab: "notifications"]
        = link "Metadata", to: "#", data: [click_tab: "metadata"]
        = link "Local", to: "#", data: [click_tab: "local"]
      - else
        = link "Local", to: "#", class: "selected", data: [click_tab: "local"]
        = link "More settings", to: "#", data: [click_tab: "join-the-herd"]

    = if @conn.assigns.current_user do
      .block__tab data-tab="watched"
        h4 Tags
        .field
          = label f, :watched_tag_list, "Tags to watch"
          = render PhilomenaWeb.TagView, "_tag_editor.html", f: f, name: :watched_tag_list, type: :edit, conn: @conn
          = error_tag f, :watched_tag_list

        h4 Watchlist queries and filtering
        p
          ' The following two areas are for search queries to control what other images show up in your watch list. Lines are ORed together. See
          => link "the syntax guide", to: "/pages/search_syntax"
          ' for how to write queries.

        .field
          = label f, :watched_images_query_str, "Watch list search string (images found by this search are added to your watched images list)"
          = textarea f, :watched_images_query_str, class: "input input--wide", autocapitalize: "none"
          = error_tag f, :watched_images_query_str
        .field
          = label f, :watched_images_exclude_str, "Watch list filter string (any images found by this search are removed from your watched images list)"
          = textarea f, :watched_images_exclude_str, class: "input input--wide", autocapitalize: "none"
          = error_tag f, :watched_images_exclude_str
        .field
          => checkbox f, :no_spoilered_in_watched, class: "checkbox"
          => label f, :no_spoilered_in_watched, "Hide images spoilered by filter in watchlist"

        h4 Other
        p
          ' RSS feed link (for Newsblur, RSSOwl, Thunderbird, etc.):
          br
          #rss-feed-button>
            code>
              = link("Click to show", to: "#", data: [click_show: "#rss-link", click_hide: "#rss-feed-button"])
          #rss-link.hidden
            = url_input f, :subscribe_url, value: url(~p"/api/v1/rss/watched?#{[key: @conn.assigns.current_user.authentication_token]}"), class: "input input--wide"
          br
          ' Do not share this URL with anyone, it may allow an attacker to compromise your account.

      .block__tab.hidden data-tab="display"
        = field_with_help( \
            "Align content to the center of the page - try this option out if you " <> \
            "browse the site on a tablet or a fairly wide screen.",
            [ \
              checkbox(f, :use_centered_layout, class: "checkbox"),
              label(f, :use_centered_layout),
            ] \
          )

        = field_with_help( \
          "Show the sidebar and new watched images on the homepage (the default) or hide it.",
          [ \
            checkbox(f, :show_sidebar_and_watched_images, class: "checkbox"),
            label(f, :show_sidebar_and_watched_images),
          ] \
        )

        = field_with_help( \
          "Hide upvote and downvote counts on images, showing only the overall score",
          [ \
            checkbox(f, :hide_vote_counts, class: "checkbox"),
            label(f, :hide_vote_counts),
          ] \
        )

        = field_with_help( \
          "Removes the border of the tags",
          [ \
            checkbox(f, :borderless_tags, class: "checkbox"),
            label(f, :borderless_tags),
          ] \
        )

        = field_with_help( \
          "Adds rounding to the corners of the tags",
          [ \
            checkbox(f, :rounded_tags, class: "checkbox"),
            label(f, :rounded_tags),
          ] \
        )

        = field_with_help( \
          "The number of images per page that are displayed on image listings " <> \
          "and searches, up to a maximum of 50. For 1080p monitors, try 24.",
          [ \
            number_input(f, :images_per_page, min: 1, max: 50, step: 1, class: "input"), \
            label(f, :images_per_page), \
            error_tag(f, :images_per_page) \
          ] \
        )

        .field
          => select f, :theme_name, themes(), class: "input"
          label> Theme
          = error_tag f, :theme_name

        .field
          => select f, :theme_color, theme_colors(), class: "input"
          label> Theme color
          = error_tag f, :theme_color

        .block.block--fixed.block--warning Don't forget to save the settings to apply the theme!

        .hidden#js-theme-paths data-theme-paths=Jason.encode!(theme_paths())
        .field
          => select f, :scale_large_images, scale_options(), class: "input"
          => label f, :scale_large_images
          = error_tag f, :scale_large_images

        - delay_home_images = if staff?(@conn.assigns.current_user), do: :staff_delay_home_images, else: :delay_home_images
        = field_with_help( \
          "Hide images without thumbnails on the homepage and for the first 3 minutes after upload (to allow for last-minute tag changes)",
          [ \
            checkbox(f, delay_home_images, class: "checkbox"),
            label(f, delay_home_images, "Delay home images"),
          ] \
        )

      .block__tab.hidden data-tab="comments"
        = field_with_help( \
          "Display the newest comments at the top of the page.", \
          [ \
            checkbox(f, :comments_newest_first, class: "checkbox"), \
            label(f, :comments_newest_first, "Newest comments first"), \
          ] \
        )

        = field_with_help( \
          "This setting takes effect when the previous is disabled. " <> \
          "Always jump to the latest page (enabled) or show the first page " <> \
          "if the oldest comments are shown at the top of the page.\n" <> \
          "Posting will always direct you to the latest page " <> \
          "so that you can see your comment in context.",
          [ \
            checkbox(f, :comments_always_jump_to_last, class: "checkbox"),
            label(f, :comments_always_jump_to_last, "Show latest comment page"),
          ] \
        )

        = field_with_help( \
          "The number of comments per page that are displayed on image pages.",
          [ \
            number_input(f, :comments_per_page, min: 1, max: 100, step: 1, class: "input"),
            label(f, :comments_per_page),
            error_tag(f, :comments_per_page),
          ] \
        )

        = field_with_help( \
          "Show the newest messages first (enabled) or show the oldest messages " <> \
          "at the top of a conversation. Enabling this makes it feel more like " <> \
          "a top-posted email quote chain.",
          [ \
            checkbox(f, :messages_newest_first, class: "checkbox"),
            label(f, :messages_newest_first, "Newest messages first"),
          ] \
        )

      .block__tab.hidden data-tab="notifications"
        = field_with_help( \
          "If enabled, you'll be subscribed to things (images or topics) " <> \
          "automatically as soon as you post a comment or reply, keeping " <> \
          "you in the conversation.",
          [ \
            checkbox(f, :watch_on_reply, class: "checkbox"), \
            label(f, :watch_on_reply, "Subscribe on Reply"), \
          ] \
        )

        = field_with_help( \
          "If enabled, you'll be subscribed to images automatically " <> \
          "as soon as you upload, to help you keep track of comments.",
          [ \
            checkbox(f, :watch_on_upload, class: "checkbox"), \
            label(f, :watch_on_upload, "Subscribe on Upload"), \
          ] \
        )

        = field_with_help( \
          "If enabled you'll be subscribed to threads automatically as soon " <> \
          "as you post, to help you keep track of replies.",
          [ \
            checkbox(f, :watch_on_new_topic, class: "checkbox"), \
            label(f, :watch_on_new_topic, "Subscribe on New Threads"), \
          ] \
        )

      .block__tab.hidden data-tab="metadata"
        .field
          => checkbox f, :fancy_tag_field_on_upload, class: "checkbox"
          => label f, :fancy_tag_field_on_upload, "Fancy tags - uploads"

        = field_with_help( \
          "The fancy tag editor gives you autosuggestions and visual " <> \
          "representations of the tags, but is sometimes not desired - " <> \
          "for instance when dealing with batch uploads where you might " <> \
          "want to copy-paste tags. You can choose which type of editor " <> \
          "to use by default here.",
          [ \
            checkbox(f, :fancy_tag_field_on_edit, class: "checkbox"), \
            label(f, :fancy_tag_field_on_edit, "Fancy tags - edits"), \
          ] \
        )

        = field_with_help( \
          "Check this box to post images and comments as anonymous by default, " <> \
          "even if logged in.",
          [ \
            checkbox(f, :anonymous_by_default, class: "checkbox"), \
            label(f, :anonymous_by_default), \
          ] \
        )

    .block__tab class=local_tab_class(@conn) data-tab="local"
      .block.block--fixed.block--warning Settings on this tab are saved in the current browser. They are independent of your login.
      = field_with_help( \
        "Use high quality thumbnails on displays with a high pixel density. " <> \
        "Requires more data than regular thumbnails.", \
        [ \
          checkbox(f, :hidpi, checked: @conn.cookies["hidpi"] == "true", class: "checkbox"), \
          label(f, :hidpi, "Serve HiDPI thumbnails"), \
        ] \
      )

      = field_with_help( \
        "Serve WebM/MP4 versions of GIF images when available. Good for " <> \
        "lower-bandwidth connections, but the video versions may have missing " <> \
        "start/end frames, and don't support transparency.", \
        [ \
          checkbox(f, :serve_webm, checked: @conn.cookies["serve_webm"] == "true", class: "checkbox"), \
          label(f, :serve_webm, "Serve WebM"), \
        ] \
      )

      = field_with_help( \
        "Use video thumbnails for WebM videos. Does not apply to GIF images.", \
        [ \
          checkbox(f, :webm, checked: @conn.cookies["webm"] == "true", class: "checkbox"), \
          label(f, :webm, "Use video thumbnails"), \
        ] \
      )

      = field_with_help( \
        "Automatically enable audio on video pages when they are loaded.", \
        [ \
          checkbox(f, :unmute_videos, checked: @conn.cookies["unmute_videos"] == "true", class: "checkbox"), \
          label(f, :unmute_videos, "Enable video audio by default"), \
        ] \
      )

      = field_with_help( \
        "Hide the uploader and date posted information on image pages.", \
        [ \
          checkbox(f, :hide_uploader, checked: @conn.cookies["hide_uploader"] == "true", class: "checkbox"), \
          label(f, :hide_uploader), \
        ] \
      )

      = field_with_help( \
        "Don't attempt to filter tag suggestions using your current filter.", \
        [ \
          checkbox(f, :unfilter_tag_suggestions, checked: @conn.cookies["unfilter_tag_suggestions"] == "true", class: "checkbox"), \
          label(f, :unfilter_tag_suggestions), \
        ] \
      )

      = field_with_help( \
        "Hide score information for images.", \
        [ \
          checkbox(f, :hide_score, checked: @conn.cookies["hide_score"] == "true", class: "checkbox"), \
          label(f, :hide_score), \
        ] \
      )

      = field_with_help( \
        "Show streams marked as NSFW on the channels page.", \
        [ \
          checkbox(f, :chan_nsfw, checked: @conn.cookies["chan_nsfw"] == "true", class: "checkbox"), \
          label(f, :chan_nsfw, "Show NSFW channels"), \
        ] \
      )

      .field
        => checkbox f, :enable_search_ac, checked: @conn.cookies["enable_search_ac"] == "true", class: "checkbox"
        => label f, :enable_search_ac, "Enable search auto-completion"

      .autocomplete-settings class=if(@conn.cookies["enable_search_ac"] != "true", do: "hidden", else: "")
        .field
          => checkbox f,
              :autocomplete_search_history_hidden,
              checked: @conn.cookies["autocomplete_search_history_hidden"] == "true",
              class: "checkbox"
          => label f,
              :autocomplete_search_history_hidden,
              "Hide search history in auto-completion"

        .autocomplete-search-history-settings[
          class=if(@conn.cookies["autocomplete_search_history_hidden"] == "true", do: "hidden", else: "")
        ]
          .field
            => number_input f,
                :autocomplete_search_history_max_suggestions_when_typing,
                min: 0,
                max: 10,
                step: 1,
                value: @conn.cookies["autocomplete_search_history_max_suggestions_when_typing"] || 3,
                class: "input"
            => label f,
                :autocomplete_search_history_max_suggestions_when_typing,
                "Maximum number of search history suggestions in auto-completion when typing"

      = if staff?(@conn.assigns.current_user) do
        = field_with_help( \
          "Hide most of the staff tools (e.g. IPs, anon names) making your site " <> \
          "appear as if you weren't staff, this is useful when browsing in public.",
          [ \
            checkbox(f, :hide_staff_tools, checked: @conn.cookies["hide_staff_tools"] == "true", class: "checkbox"),
            label(f, :hide_staff_tools),
          ] \
        )

    = if !@conn.assigns.current_user do
      .block__tab.hidden data-tab="join-the-herd"
        p
          ' Consider
          => link "creating an account!", to: ~p"/registrations/new"
          br
          ' You will be able to customize the number of images and comments you get on a single page, as well as change the appearance of the site with custom themes.

  br
  = submit "Save My Settings", class: "button"
  br
